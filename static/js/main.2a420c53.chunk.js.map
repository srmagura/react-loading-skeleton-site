{"version":3,"sources":["components/Post.tsx","components/SimplePost.tsx","components/Home.tsx","App.tsx","index.tsx"],"names":["Post","loading","className","count","height","width","circle","icon","faSmile","size","SimplePost","styles","SkeletonStyles","baseColor","highlightColor","borderRadius","direction","Home","useState","setLoading","logoUrl","process","themes","src","alt","id","style","display","flexDirection","justifyContent","faArrowRight","Button","href","target","map","theme","indexOf","type","checked","value","toString","onChange","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAUaA,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAClB,sBAAKC,UAAU,OAAf,UACE,gCACGD,EACC,cAAC,IAAD,CAAUE,MAAO,EAAGC,OAAQ,GAAIC,MAAO,GAAIC,QAAQ,IAEnD,cAAC,IAAD,CAAiBC,KAAMC,IAASC,KAAK,OAEvC,4CAEF,6DACA,oPCNSC,EAAa,SAAC,GAAD,IACxBT,EADwB,EACxBA,QACgBU,EAFQ,EAExBC,eAFwB,OAIxB,8BACGX,EACC,cAAC,IAAD,CACEY,UAAWF,EAAOE,UAClBC,eAAgBH,EAAOG,eACvBC,aAAcJ,EAAOI,aACrBC,UAAWL,EAAOK,UAClBZ,OAAQ,GACRC,MAAO,IANT,SAQE,cAAC,IAAD,CAAUF,MAAO,MAGnB,gCACE,mEACA,sE,QC3BKc,EAAO,WAClB,MAA8BC,oBAAS,GAAvC,mBAAOjB,EAAP,KAAgBkB,EAAhB,KACMC,EAAO,UAAMC,0BAAN,aACPC,EAAqC,CACzC,CACET,UAAW,UACXC,eAAgB,WAElB,CACEC,aAAc,GAEhB,CACEC,UAAW,QAGf,OACE,gCACE,mCACE,qBAAKO,IAAKH,EAASI,IAAI,gBAAgBC,GAAG,SAC1C,wDACA,oHAKF,sBAAKvB,UAAU,YAAf,UACE,cAAC,EAAD,CAAMD,SAAO,IACb,qBACEyB,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,eAAgB,UAJpB,SAOE,cAAC,IAAD,CAAiB3B,UAAU,SAASK,KAAMuB,IAAcrB,KAAK,SAE/D,cAAC,EAAD,CAAMR,SAAS,OAEjB,gEACA,oWAQA,uEACA,+DACgC,0CADhC,4DAIA,8BACE,+BACE,0DACA,0GAGA,wPAQJ,cAAC8B,EAAA,EAAD,UACE,6BACE,mBACEC,KAAK,kDACLC,OAAO,SAFT,wCAQJ,gDACA,uFACyD,IACvD,iDAFF,8DAKA,sBAAK/B,UAAU,mBAAf,UACGoB,EAAOY,KAAI,SAACC,GAAD,OACV,8BACE,cAAC,EAAD,CAAYlC,QAASA,EAASW,eAAgBuB,KADtCb,EAAOc,QAAQD,OAI3B,kCACE,uBACEE,KAAK,WACLC,QAASrC,EACTsC,MAAOtC,EAAQuC,WACfC,SAAU,kBAAMtB,GAAYlB,MALhC,gBAUF,cAAC8B,EAAA,EAAD,CAAQN,GAAG,SAAX,SACE,mBACEA,GAAG,cACHO,KAAK,0DACLC,OAAO,SAHT,8BAQF,cAACF,EAAA,EAAD,CAAQN,GAAG,eAAX,SACE,mBACEA,GAAG,oBACHO,KAAK,0EACLC,OAAO,SAHT,uC,MCvGOS,MARf,WACE,OACE,qBAAKxC,UAAU,MAAf,SACE,cAAC,EAAD,OCFNyC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2a420c53.chunk.js","sourcesContent":["import Skeleton from \"@srmagura/react-loading-skeleton\";\r\nimport React from \"react\";\r\nimport \"@srmagura/react-loading-skeleton/dist/skeleton.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSmile } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport interface PostProps {\r\n  loading: boolean;\r\n}\r\n\r\nexport const Post = ({ loading }: PostProps): React.ReactElement => (\r\n  <div className=\"post\">\r\n    <div>\r\n      {loading ? (\r\n        <Skeleton count={1} height={62} width={62} circle={true} />\r\n      ) : (\r\n        <FontAwesomeIcon icon={faSmile} size=\"4x\" />\r\n      )}\r\n      <p>John Doe</p>\r\n    </div>\r\n    <h3>Use React Loading Skeleton!</h3>\r\n    <p>\r\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum nec\r\n      justo feugiat, auctor nunc ac, volutpat arcu. Suspendisse faucibus aliquam\r\n      ante, sit amet iaculis dolor posuere et. In ut placerat leo.\r\n    </p>\r\n  </div>\r\n);\r\n","import Skeleton, { SkeletonTheme } from \"@srmagura/react-loading-skeleton\";\r\nimport React from \"react\";\r\nimport \"@srmagura/react-loading-skeleton/dist/skeleton.css\";\r\n\r\nexport interface SimpleSkeletonThemeProps {\r\n  borderRadius?: number;\r\n  baseColor?: string;\r\n  highlightColor?: string;\r\n  direction?: \"ltr\" | \"rtl\";\r\n}\r\n\r\ninterface SimplePostProps {\r\n  loading: boolean;\r\n  SkeletonStyles: SimpleSkeletonThemeProps;\r\n}\r\nexport const SimplePost = ({\r\n  loading,\r\n  SkeletonStyles: styles,\r\n}: SimplePostProps): React.ReactElement => (\r\n  <div>\r\n    {loading ? (\r\n      <SkeletonTheme\r\n        baseColor={styles.baseColor}\r\n        highlightColor={styles.highlightColor}\r\n        borderRadius={styles.borderRadius}\r\n        direction={styles.direction}\r\n        height={50}\r\n        width={300}\r\n      >\r\n        <Skeleton count={2} />\r\n      </SkeletonTheme>\r\n    ) : (\r\n      <div>\r\n        <h3>React Loading Skeleton is so fun!</h3>\r\n        <p>Try it now in all of your apps.</p>\r\n      </div>\r\n    )}\r\n  </div>\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { Post } from \"./Post\";\r\nimport { SimplePost, SimpleSkeletonThemeProps } from \"./SimplePost\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nexport const Home = (): React.ReactElement => {\r\n  const [loading, setLoading] = useState(true);\r\n  const logoUrl = `${process.env.PUBLIC_URL}/logo.svg`;\r\n  const themes: SimpleSkeletonThemeProps[] = [\r\n    {\r\n      baseColor: \"#77c1ff\",\r\n      highlightColor: \"#c762fd\",\r\n    },\r\n    {\r\n      borderRadius: 0,\r\n    },\r\n    {\r\n      direction: \"rtl\",\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      <header>\r\n        <img src={logoUrl} alt=\"Skeleton Logo\" id=\"logo\" />\r\n        <h1>React Loading Skeleton</h1>\r\n        <p>\r\n          Make beautiful, animated loading skeletons that automatically adapt to\r\n          your app.\r\n        </p>\r\n      </header>\r\n      <div className=\"post-grid\">\r\n        <Post loading />\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <FontAwesomeIcon className=\"faIcon\" icon={faArrowRight} size=\"4x\" />\r\n        </div>\r\n        <Post loading={false} />\r\n      </div>\r\n      <h2>Adapts to your existing styles</h2>\r\n      <p>\r\n        The `Skeleton` component should be used directly in your components in\r\n        place of content that is loading. While other libraries require you to\r\n        meticulously craft a skeleton screen that matches the font size, line\r\n        height, and margins of your content, the `Skeleton` component is\r\n        automatically sized to the correct dimensions.\r\n      </p>\r\n\r\n      <h2>Don't make dedicated skeleton screens</h2>\r\n      <p>\r\n        Instead, make components with <em>built-in</em> skeleton states. This\r\n        approach is beneficial because:\r\n      </p>\r\n      <div>\r\n        <ol>\r\n          <li>It keeps styles in sync.</li>\r\n          <li>\r\n            Components should represent all possible states â€” loading included.\r\n          </li>\r\n          <li>\r\n            It allows for more flexible loading patterns. In the blog post\r\n            example above, it's possible to have the title load before the body,\r\n            while having both pieces of content show loading skeletons at the\r\n            right time.\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Button>\r\n        <h2>\r\n          <a\r\n            href=\"https://github.com/dvtng/react-loading-skeleton\"\r\n            target=\"_blank\"\r\n          >\r\n            Documentation / GitHub\r\n          </a>\r\n        </h2>\r\n      </Button>\r\n      <h2>Fully themable</h2>\r\n      <p>\r\n        Customize individual skeletons with props, or render a{\" \"}\r\n        <code>SkeletonTheme</code> to style all skeletons below it in the React\r\n        hierarchy.\r\n      </p>\r\n      <div className=\"simple-post-grid\">\r\n        {themes.map((theme) => (\r\n          <div key={themes.indexOf(theme)}>\r\n            <SimplePost loading={loading} SkeletonStyles={theme} />\r\n          </div>\r\n        ))}\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={loading}\r\n            value={loading.toString()}\r\n            onChange={() => setLoading(!loading)}\r\n          />\r\n          Loading\r\n        </label>\r\n      </div>\r\n      <Button id=\"github\">\r\n        <a\r\n          id=\"github-link\"\r\n          href=\"https://github.com/srmagura/react-loading-skeleton-site\"\r\n          target=\"_blank\"\r\n        >\r\n          Edit on GitHub\r\n        </a>\r\n      </Button>\r\n      <Button id=\"code-sandbox\">\r\n        <a\r\n          id=\"code-sandbox-link\"\r\n          href=\"https://codesandbox.io/s/react-loading-skeleton-3xwil?file=/src/App.tsx\"\r\n          target=\"_blank\"\r\n        >\r\n          Open on CodeSandbox\r\n        </a>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { Home } from \"./components/Home\";\nimport \"./styles/App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}